#							-*- Makefile -*-
BUILD_E1000=@BUILD_E1000@
BUILD_BCM5700=@BUILD_BCM5700@

# P4_MODULE_DIRS += p4tests/
P4_MODULE_DIRS += p4sock/
# P4_MODULE_DIRS += p4myrinet
# P4_MODULE_DIRS += p4log/
# P4_MODULE_DIRS += tg3 tg3_glue
ifeq ($(BUILD_E1000),yes)
P4_MODULE_DIRS += e1000/
P4_MODULE_DIRS += e1000_glue/
endif
ifeq ($(BUILD_BCM5700),yes)
P4_MODULE_DIRS += bcm5700/
P4_MODULE_DIRS += bcm5700_glue/
endif
# P4_MODULE_DIRS += meminfo
# P4_MODULE_DIRS += psfs
P4_MODULE_DIRS += p4tcp/
# P4_MODULE_DIRS += p4ethertest

#
# Step 1: (KNAME not set)
#  - Create one builddir for each kernel in KERNELLIST.
#  - Call this Makefile in every builddir with KNAME set
#
# Step 2: (KNAME set, KERNELRELEASE not set)
#  - Prepare the builddir for building. (Create Symlinks to all
#    sourcefiles and makefiles, because VPATH wont work)
#  - Ask the kernel Makefile to build our modules. The kernel
#    Makefile will call us again with KERNELRELEASE set.
#
# Step 3: (KNAME set, KERNELRELEASE set)
#  - Use the rules from the kernel to work through our subdirs
#    (P4_MODULE_DIRS).
#


ifeq ($(KNAME),)
#
# Step 1: Loop over all kernels inside KERNELLIST
#

# You can overwrite KERNELLIST with make KERNELLIST=xyz.
KERNELLIST := @KERNELLIST@

OSNAME := $(shell uname -s)
OSARCHITECTUR :=  $(shell uname -m)
OSID  := $(OSARCHITECTUR)_$(OSNAME)
OSUNAME := $(shell uname -r)

%: $(KERNELLIST)
	@egrep -v '(^#|^[ \t]*$$)' $(KERNELLIST)		\
	|while read kname kdir extra;				\
	do                                                      \
		builddir=$(OSID)_$$kname;                       \
		echo Builddir $$builddir;                       \
		mkdir -p $$builddir;                            \
		test -f	$$builddir/Makefile || ln -s $(shell pwd)/Makefile $$builddir/Makefile; \
		$(MAKE) -C $$builddir KNAME=$$kname KDIR=$$kdir $$extra $@;\
	done

clean:
	@egrep -v '(^#|^[ \t]*$$)' $(KERNELLIST)		\
	|while read kname kdir extra;				\
	do                                                      \
		builddir=$(OSID)_$$kname;                       \
		echo rm $$builddir;				\
		rm -rf $$builddir;				\
	done

distclean mrproper: clean
	$(RM) Makefile

$(KERNELLIST):
	@echo "# KNAME KDIR" >> $@
	@if test -d /lib/modules/$(OSUNAME)/source; then \
		echo "$(OSUNAME)  /lib/modules/$(OSUNAME)/source O=/lib/modules/$(OSUNAME)/build" >> $@; \
	elif test -d /lib/modules/$(OSUNAME)/build; then \
		echo "$(OSUNAME)  /lib/modules/$(OSUNAME)/build" >> $@; \
	elif test -d /usr/src/linux; then		\
		echo "$(OSUNAME)  /usr/src/linux" >> $@; \
	fi
	@echo "Using default kernellist $@:";
	@cat $@
else

ifeq ($(KERNELRELEASE),)
#
# Step 2: Prepare the builddir
#
BUILDDIR := $(shell pwd)
SRCDIR :=@abs_srcdir@

export P4_TOP_SRCDIR := @TOP_SRCDIR@

all: modules

# Create a "symlinked" copy of the source.

#module_files := $(shell cd $(SRCDIR);find $(module_dirs) -type f)
#module_files := $(shell cd $(SRCDIR);ls */*.[ch] */Makefile Makefile.compat)
module_files := $(shell cd $(SRCDIR);ls Makefile.compat \
	$(addsuffix *.[ch], $(P4_MODULE_DIRS)) \
	$(addsuffix Makefile, $(P4_MODULE_DIRS)))

$(module_files): %:	$(SRCDIR)/%
#	@echo "Create link $@ -> $<"
	@mkdir -p $(dir $@)
	@ln -s $< $@

_build_tree_: $(module_files)

dep modules: _build_tree_
	$(MAKE) -C $(KDIR) SUBDIRS=$(BUILDDIR) $@
# 2.6.x:	$(MAKE) -C $(KDIR) V=1 M=$(BUILDDIR) $@

_install_%:
	@$(MAKE) -f $(SRCDIR)/Makefile.install -C $(BUILDDIR) subdir=$* modules_install

modules_install: $(addprefix _install_, $(P4_MODULE_DIRS))


else # ifneq ($(KERNELRELEASE),)
#
# Step 3: Build modules
#

$(obj)/Makefile.release Makefile.release:
	@echo "# Generated file! Do not edit!" > $@
	@echo "KERNELRELEASE:=$(KERNELRELEASE)" >> $@
	@echo "VERSION:=$(VERSION)" >> $@
	@echo "PATCHLEVEL:=$(PATCHLEVEL)" >> $@
	@echo "SUBLEVEL:=$(SUBLEVEL)" >> $@
	@echo "EXTRAVERSION:=$(EXTRAVERSION)" >> $@
	@echo "KDIR:=$(KDIR)" >> $@


ifeq ($(VERSION).$(PATCHLEVEL),2.4)
  #
  # Used by the 2.4.x kbuild system.
  #

  subdir-m += $(P4_MODULE_DIRS)

modules: Makefile.release

  -include $(TOPDIR)/Rules.make
else  # ifneq ($(VERSION).$(PATCHLEVEL),2.4)
  #
  # Used by the 2.6.x kbuild system.
  #

  obj-m += $(P4_MODULE_DIRS)

$(addprefix $(obj)/, $(P4_MODULE_DIRS:%/=%)): $(obj)/Makefile.release

endif # ifneq ($(VERSION).$(PATCHLEVEL),2.4)

endif # ifneq ($(KERNELRELEASE),)
endif # ifneq ($(KNAME),)
